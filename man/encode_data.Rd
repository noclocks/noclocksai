% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/encode.R
\name{encode_data}
\alias{encode_data}
\alias{encode_data_csv}
\alias{encode_data_json}
\alias{encode_data_text}
\title{Encode Data}
\usage{
encode_data(
  data,
  method = c("json", "csv", "text"),
  max_rows = 100,
  show_end = 10
)

encode_data_csv(data, colnames = TRUE)

encode_data_json(data, strip_brackets = FALSE)

encode_data_text(data)
}
\arguments{
\item{data}{A data frame to encode.}

\item{method}{A character string specifying the encoding method. Options include "json", "csv", or "text".
The default value is "json".}

\item{max_rows}{An integer specifying the maximum number of rows to include in the encoded output.
If the number of rows in the data frame exceeds this value, the output will be truncated.
The default value is \code{100}.}

\item{show_end}{An integer specifying the number of rows to show at the end of the encoded output.
The default value is \code{10}.}
}
\value{
A character string representing the encoded data.
}
\description{
Encode a data frame into a specified format (e.g., JSON, CSV, or text) with optional
truncation of rows to a specified maximum number.

Its primary purpose is to provide a convenient way to encode data for use with
AI Chat Agents.
}
\examples{
encode_data(hud_markets, "json", max_rows = 10, show_end = 5) |> cat()
encode_data(hud_markets, "csv", max_rows = 10, show_end = 5) |> cat()
encode_data(hud_markets, "text", max_rows = 10, show_end = 5) |> cat()
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/config.R
\name{encrypt_config}
\alias{encrypt_config}
\alias{decrypt_config}
\title{Encrypt/Decrypt Configuration Files}
\usage{
encrypt_config(
  config_file = NULL,
  encrypted_file = NULL,
  overwrite = TRUE,
  key = "NOCLOCKS_ENCRYPTION_KEY"
)

decrypt_config(
  encrypted_file = NULL,
  decrypted_file = NULL,
  key = "NOCLOCKS_ENCRYPTION_KEY",
  set_env = FALSE
)
}
\arguments{
\item{config_file}{A character string representing the path to the configuration file. If left
\code{NULL}, the function will attempt to use the default configuration file via \code{pkg_sys_config("config.yml")}.}

\item{encrypted_file}{A character string representing the path to the encrypted configuration file. If left
\code{NULL}, the function will create a new file with the same name as the original file but with the extension
\code{.encrypted.yml}.}

\item{overwrite}{A logical value indicating whether to overwrite an existing encrypted file. Default is \code{TRUE}.}

\item{key}{A character string representing the name of the encryption key. Default is \code{NOCLOCKS_ENCRYPTION_KEY}.}

\item{decrypted_file}{A character string representing the path to the decrypted configuration file. If left
\code{NULL}, the function will create a new \code{config.yml} in the same directory as the encrypted file.}

\item{set_env}{A logical value indicating whether to set the \code{R_CONFIG_FILE} environment variable to the decrypted file.}
}
\value{
\itemize{
\item \code{encrypt_config()}: Returns \code{0} invisibly.
\item \code{decrypt_config()}: Returns the configuration invisibly.
}
}
\description{
Functions for encrypting and decrypting configuration files.

Functions:
\itemize{
\item \code{encrypt_config()}: Encrypt a configuration file using a secret key.
\item \code{decrypt_config()}: Decrypt an encrypted configuration file using a secret key.
}
}
\examples{
\dontrun{
# encrypt the default configuration file
encrypt_config()

# decrypt the encrypted configuration file
decrypt_config()
}
}
